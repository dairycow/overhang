version: '3.8'

services:
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: overhang-backend
    restart: unless-stopped
    env_file:
      - ./packages/backend/.env.production
    volumes:
      - backend-data:/app/data
    networks:
      - overhang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    container_name: overhang-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - overhang-network

  nginx:
    image: nginx:alpine
    container_name: overhang-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - certbot-data:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    networks:
      - overhang-network

  certbot:
    image: certbot/certbot
    container_name: overhang-certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - certbot-data:/var/www/certbot
    # Note: entrypoint only used for the running service (auto-renewal)
    # For manual cert acquisition, use: docker-compose run --rm --entrypoint certbot certbot certonly ...
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  backend-data:
  certbot-data:

networks:
  overhang-network:
    driver: bridge
